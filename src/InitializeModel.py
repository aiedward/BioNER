import CRFDoubleBILSTMW2VCNN as charcnn
import CRFPPBiLSTMW2VCNN as crfpp
import AttCRFPPBiLSTMW2VCNN as attcrfpp
import CRFEncoderDecoderPPBiLSTMW2VCNN as encoderdecodercrfpp
import CRFEncoderDecoderPPBiLSTMW2VBiLSTM as charbilstm
import CRFSeparatePotentialBiLSTMW2VCNN as separatecrfpp
import CRFSeparatePotentialBiLSTMW2VCNN_POSPP as pospp
import CRFSeparatePotentialBiLSTMW2VCNN_BoundaryPP as boundarypp
import CRF_BiLSTM_W2VCNN_STATICMATRIX as stationary_matrix
import CRF_BiLSTMW2VCNN_POSPP as entity_pospp
import CRF_BiLSTMW2VCNN_SeparatePP as pp_type
import CRF_Final as crf_final
import CRF_Final_PP as crf_final_pp
import CRF_Final_U as crf_final_u
import CRF_Final_U_PP as crf_final_u_pp
import CRF_Final_LSTM as crf_final_lstm
import CRF_Final_LSTM_Separate as crf_final_lstm_separate

class InitializeModel:
    def __init__(self, optimization, orthogonal_weight_init, word2vec_matrix, word_embedding_dim, n_characters, character_embedding_dim, 
                 n_pos, pos_embedding_dim, max_token_length, 
                 n_filter, n_width, cnn_output_dim, 
                 lstm_hidden_dim_2, lstm_hidden_dim, input_mlp_dim, output_dim, mlp_dim,
                 train_words, train_lengths, train_targets, train_char_samples, train_pos, 
                 testing_samples, testing_lengths, testing_targets, 
                 testing_chars, testing_char_lengths, testing_pos, 
                 dropout_on, dropout_p_x, dropout_p_s, config_layer_normalization, config_dataset, 
                 exclusive_begin_end_tagging, loss_f, weight_decay, gradient_threshold, l2_coef, cnn_character_embedding, w2v_included, 
                 config_input_mlp_layer, config_initial_hidden_modeling, config_pp_joint_training, config_crf_pp_training, config_pp_highway_network, 
                 config_no_crf_training, config_crf_u_pp_training,
                 config_input_mlp_activation, config_pairwise_output_modeling, 
                 config_cnn_shared, config_mlp_layer, config_bilstm_2_layer, w2v_training, 
                 pp_mlp_dim, pp_mlp_dim2, pp_decoder_hiddem_dim, pp_att_scoring_mlp_dim,
                 pairwise_potential_training, attention_in_PP, pairwise_encoder_decoder_training, config_gru, config_lstm_character, lstm_hidden_char_dim, separate_potential, 
                 highway_network, pos_enable, with_forward_backward, sentence_level_phrase_transition, sentence_level_type_transition, pp_type_sentence_embedding_status,
                 lstm_pp_hidden_dim, pp_output_dim, pp_character_cnn_enable, pp_w2v_enable, lstm_pp_type_hidden_dim, pp_type_output_dim, pp_type_mlp_dim,
                 pp_type_decoder_hiddem_dim):
#         if pairwise_potential_training == True:
#             if attention_in_PP == True:
#                 self.model = attcrfpp.AttCRFPPBiLSTMW2VCNN(
#                                       word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim, 
#                                       mlp_dim,
#                                       output_dim, 
#                                       label_dim, 
#                                       mlp_dim,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       dropout_p,
#                                       loss_f,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       pp_att_scoring_mlp_dim
#                                       )
        if separate_potential == True:
            self.model = crf_final_lstm_separate.CRF_PP_LSTM_Separate(optimization,
                                          orthogonal_weight_init,
                                          word2vec_matrix,
                                          word_embedding_dim,
                                          n_characters, 
                                          character_embedding_dim, 
                                          n_pos,
                                          pos_embedding_dim,
                                          max_token_length,
                                          n_filter,
                                          n_width,
                                          cnn_output_dim,
                                          lstm_hidden_dim_2,
                                          lstm_hidden_dim,
                                          lstm_hidden_char_dim,
                                          input_mlp_dim,
                                          output_dim, 
                                          mlp_dim,
                                          testing_samples,
                                          testing_lengths,
                                          testing_targets,
                                          testing_chars,
                                          testing_char_lengths,
                                          testing_pos,
                                          dropout_on,
                                          dropout_p_x,
                                          dropout_p_s,
                                          config_layer_normalization,
                                          exclusive_begin_end_tagging,
                                          pairwise_potential_training,
                                          loss_f,
                                          weight_decay,
                                          gradient_threshold,
                                          l2_coef,
                                          w2v_included,
                                          config_input_mlp_layer,
                                          config_initial_hidden_modeling,
                                          config_pp_joint_training,
                                          config_input_mlp_activation,
                                          config_pairwise_output_modeling,
                                          config_gru,
                                          config_lstm_character,
                                          config_cnn_shared,
                                          config_mlp_layer,
                                          config_bilstm_2_layer,
                                          w2v_training,
                                          pp_mlp_dim,
                                          pp_mlp_dim2,
                                          pp_decoder_hiddem_dim,
                                          highway_network,
                                          config_pp_highway_network,
                                          pairwise_encoder_decoder_training,
                                          pos_enable,
                                          lstm_pp_hidden_dim,
                                          pp_output_dim, 
                                          pp_character_cnn_enable, 
                                          pp_w2v_enable,
                                          with_forward_backward,
                                          sentence_level_phrase_transition,
                                          sentence_level_type_transition,
                                          pp_type_sentence_embedding_status,
                                          lstm_pp_type_hidden_dim, 
                                          pp_type_output_dim, 
                                          pp_type_mlp_dim,
                                          pp_type_decoder_hiddem_dim,
                                          cnn_character_embedding
                                          )

#                 if pairwise_encoder_decoder_training == True:
#                     if pp_w2v_enable == True:
#             self.model = pp_type.CRF_BiLSTMW2VCNN_SeparatePP(
#                                       optimization,
#                                       orthogonal_weight_init,
#                                       word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       n_pos,
#                                       pos_embedding_dim,
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim,
#                                       input_mlp_dim,
#                                       output_dim, 
#                                       mlp_dim,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       testing_char_lengths,
#                                       testing_pos,
#                                       dropout_on,
#                                       dropout_p_x,
#                                       dropout_p_s,
#                                       exclusive_begin_end_tagging,
#                                       loss_f,
#                                       weight_decay,
#                                       gradient_threshold,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_input_mlp_layer,
#                                       config_input_mlp_activation,
#                                       config_pairwise_output_modeling,
#                                       config_gru,
#                                       config_lstm_character,
#                                       config_cnn_shared,
#                                       config_mlp_layer,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       highway_network,
#                                       pairwise_encoder_decoder_training,
#                                       pos_enable,
#                                       lstm_pp_hidden_dim,
#                                       pp_output_dim, 
#                                       pp_character_cnn_enable, 
#                                       pp_w2v_enable,
#                                       with_forward_backward,
#                                       sentence_level_phrase_transition,
#                                       sentence_level_type_transition,
#                                       pp_type_sentence_embedding_status,
#                                       lstm_pp_type_hidden_dim, 
#                                       pp_type_output_dim, 
#                                       pp_type_mlp_dim,
#                                       pp_type_decoder_hiddem_dim,
#                                       cnn_character_embedding
#                                       )
        else:
            if config_crf_pp_training == True:
                self.model = crf_final_pp.CRF_Final_PP(
                                          word2vec_matrix,
                                          word_embedding_dim,
                                          n_characters, 
                                          n_pos,
                                          max_token_length,
                                          n_filter,
                                          n_width,
                                          cnn_output_dim,
                                          lstm_hidden_dim,
                                          output_dim, 
                                          train_words, train_lengths, train_targets, train_char_samples, train_pos,
                                          testing_samples,
                                          testing_lengths,
                                          testing_targets,
                                          testing_chars,
                                          testing_char_lengths,
                                          testing_pos,
                                          loss_f,
                                          gradient_threshold,
                                          l2_coef,
                                          highway_network,
                                          pos_enable
                                          )
            elif config_crf_u_pp_training == True:
                self.model = crf_final_u_pp.CRF_Final_U_PP(
                                            orthogonal_weight_init,
                                            word2vec_matrix,
                                            word_embedding_dim,
                                            n_characters,
                                            character_embedding_dim,
                                            n_pos,
                                            pos_embedding_dim,
                                            max_token_length,
                                            n_filter,
                                            n_width,
                                            cnn_output_dim,
                                            lstm_hidden_dim_2,
                                            lstm_hidden_dim,
                                            output_dim,
                                            mlp_dim,
                                            train_words, train_lengths, train_targets, train_char_samples, train_pos,
                                            testing_samples, testing_lengths, testing_targets, testing_chars, testing_char_lengths, testing_pos,
                                            gradient_threshold,
                                            highway_network
                                            )

#             elif config_no_crf_training == True:
#                 self.model = crf_final_u.MLE(
#                                           optimization,
#                                           orthogonal_weight_init,
#                                           word2vec_matrix,
#                                           word_embedding_dim,
#                                           n_characters, 
#                                           character_embedding_dim, 
#                                           n_pos,
#                                           pos_embedding_dim,
#                                           max_token_length,
#                                           n_filter,
#                                           n_width,
#                                           cnn_output_dim,
#                                           lstm_hidden_dim_2,
#                                           lstm_hidden_dim,
#                                           input_mlp_dim,
#                                           output_dim, 
#                                           mlp_dim,
#                                           testing_samples,
#                                           testing_lengths,
#                                           testing_targets,
#                                           testing_chars,
#                                           testing_char_lengths,
#                                           testing_pos,
#                                           dropout_on,
#                                           dropout_p_x,
#                                           dropout_p_s,
#                                           exclusive_begin_end_tagging,
#                                           pairwise_potential_training,
#                                           loss_f,
#                                           weight_decay,
#                                           gradient_threshold,
#                                           l2_coef,
#                                           w2v_included,
#                                           config_input_mlp_layer,
#                                           config_initial_hidden_modeling,
#                                           config_pp_joint_training,
#                                           config_input_mlp_activation,
#                                           config_pairwise_output_modeling,
#                                           config_gru,
#                                           config_lstm_character,
#                                           config_cnn_shared,
#                                           config_mlp_layer,
#                                           config_bilstm_2_layer,
#                                           w2v_training,
#                                           pp_mlp_dim,
#                                           pp_mlp_dim2,
#                                           pp_decoder_hiddem_dim,
#                                           highway_network,
#                                           pairwise_encoder_decoder_training,
#                                           pos_enable,
#                                           lstm_pp_hidden_dim,
#                                           pp_output_dim, 
#                                           pp_character_cnn_enable, 
#                                           pp_w2v_enable,
#                                           with_forward_backward,
#                                           sentence_level_phrase_transition,
#                                           sentence_level_type_transition,
#                                           pp_type_sentence_embedding_status,
#                                           lstm_pp_type_hidden_dim, 
#                                           pp_type_output_dim, 
#                                           pp_type_mlp_dim,
#                                           pp_type_decoder_hiddem_dim,
#                                           cnn_character_embedding
#                                           )
#             elif config_lstm_character == True:
#                 self.model = crf_final_lstm.CRF_PP_LSTM(optimization,
#                                           orthogonal_weight_init,
#                                           word2vec_matrix,
#                                           word_embedding_dim,
#                                           n_characters, 
#                                           character_embedding_dim, 
#                                           n_pos,
#                                           pos_embedding_dim,
#                                           max_token_length,
#                                           n_filter,
#                                           n_width,
#                                           cnn_output_dim,
#                                           lstm_hidden_dim_2,
#                                           lstm_hidden_dim,
#                                           lstm_hidden_char_dim,
#                                           input_mlp_dim,
#                                           output_dim, 
#                                           mlp_dim,
#                                           testing_samples,
#                                           testing_lengths,
#                                           testing_targets,
#                                           testing_chars,
#                                           testing_char_lengths,
#                                           testing_pos,
#                                           dropout_on,
#                                           dropout_p_x,
#                                           dropout_p_s,
#                                           config_layer_normalization,
#                                           exclusive_begin_end_tagging,
#                                           pairwise_potential_training,
#                                           loss_f,
#                                           weight_decay,
#                                           gradient_threshold,
#                                           l2_coef,
#                                           w2v_included,
#                                           config_input_mlp_layer,
#                                           config_initial_hidden_modeling,
#                                           config_pp_joint_training,
#                                           config_input_mlp_activation,
#                                           config_pairwise_output_modeling,
#                                           config_gru,
#                                           config_lstm_character,
#                                           config_cnn_shared,
#                                           config_mlp_layer,
#                                           config_bilstm_2_layer,
#                                           w2v_training,
#                                           pp_mlp_dim,
#                                           pp_mlp_dim2,
#                                           pp_decoder_hiddem_dim,
#                                           highway_network,
#                                           config_pp_highway_network,
#                                           pairwise_encoder_decoder_training,
#                                           pos_enable,
#                                           lstm_pp_hidden_dim,
#                                           pp_output_dim, 
#                                           pp_character_cnn_enable, 
#                                           pp_w2v_enable,
#                                           with_forward_backward,
#                                           sentence_level_phrase_transition,
#                                           sentence_level_type_transition,
#                                           pp_type_sentence_embedding_status,
#                                           lstm_pp_type_hidden_dim, 
#                                           pp_type_output_dim, 
#                                           pp_type_mlp_dim,
#                                           pp_type_decoder_hiddem_dim,
#                                           cnn_character_embedding
#                                           )
#             else:
#                 self.model = crf_final.CRF_PP(
#                                           optimization,
#                                           orthogonal_weight_init,
#                                           word2vec_matrix,
#                                           word_embedding_dim,
#                                           n_characters, 
#                                           character_embedding_dim, 
#                                           n_pos,
#                                           pos_embedding_dim,
#                                           max_token_length,
#                                           n_filter,
#                                           n_width,
#                                           cnn_output_dim,
#                                           lstm_hidden_dim_2,
#                                           lstm_hidden_dim,
#                                           input_mlp_dim,
#                                           output_dim, 
#                                           mlp_dim,
#                                           train_words, train_lengths, train_targets, train_char_samples, train_pos,
#                                           testing_samples,
#                                           testing_lengths,
#                                           testing_targets,
#                                           testing_chars,
#                                           testing_char_lengths,
#                                           testing_pos,
#                                           dropout_on,
#                                           dropout_p_x,
#                                           dropout_p_s,
#                                           config_layer_normalization,
#                                           config_dataset,
#                                           exclusive_begin_end_tagging,
#                                           pairwise_potential_training,
#                                           loss_f,
#                                           weight_decay,
#                                           gradient_threshold,
#                                           l2_coef,
#                                           w2v_included,
#                                           config_input_mlp_layer,
#                                           config_initial_hidden_modeling,
#                                           config_pp_joint_training,
#                                           config_input_mlp_activation,
#                                           config_pairwise_output_modeling,
#                                           config_gru,
#                                           config_lstm_character,
#                                           config_cnn_shared,
#                                           config_mlp_layer,
#                                           config_bilstm_2_layer,
#                                           w2v_training,
#                                           pp_mlp_dim,
#                                           pp_mlp_dim2,
#                                           pp_decoder_hiddem_dim,
#                                           highway_network,
#                                           config_pp_highway_network,
#                                           pairwise_encoder_decoder_training,
#                                           pos_enable,
#                                           lstm_pp_hidden_dim,
#                                           pp_output_dim, 
#                                           pp_character_cnn_enable, 
#                                           pp_w2v_enable,
#                                           with_forward_backward,
#                                           sentence_level_phrase_transition,
#                                           sentence_level_type_transition,
#                                           pp_type_sentence_embedding_status,
#                                           lstm_pp_type_hidden_dim, 
#                                           pp_type_output_dim, 
#                                           pp_type_mlp_dim,
#                                           pp_type_decoder_hiddem_dim,
#                                           cnn_character_embedding
#                                           )
#                     else:
#                         self.model = entity_pospp.CRF_BiLSTMW2VCNN_POSPP(
#                                       word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       n_pos,
#                                       pos_embedding_dim,
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim, 
#                                       output_dim, 
#                                       mlp_dim,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       testing_pos,
#                                       dropout_p,
#                                       loss_f,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       highway_network,
#                                       pairwise_encoder_decoder_training,
#                                       pos_enable,
#                                       lstm_pp_hidden_dim,
#                                       pp_output_dim, 
#                                       pp_character_cnn_enable, 
#                                       pp_w2v_enable,
#                                       with_forward_backward
#                                       )


#                 if lstm_character_embedding == True:
#                     print "CRFEncoderDecoderPPBiLSTMW2VBiLSTM"
#                     self.model = charbilstm.CRFEncoderDecoderPPBiLSTMW2VBiLSTM(word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim, 
#                                       mlp_dim,
#                                       output_dim, 
#                                       label_dim, 
#                                       mlp_dim,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       testing_char_lengths,
#                                       dropout_p,
#                                       loss_f,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       lstm_hidden_char_dim
#                                       )
#                 else:
#                     self.model = encoderdecodercrfpp.CRFEncoderDecoderPPBiLSTMW2VCNN(
#                                       word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim, 
#                                       output_dim, 
#                                       label_dim, 
#                                       mlp_dim,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       dropout_p,
#                                       loss_f,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       highway_network
#                                       )
#                     self.model = pospp.CRFSeparatePotentialBiLSTMW2VCNN_POSPP(
#                                       word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       n_pos,
#                                       pos_embedding_dim,
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim, 
#                                       mlp_dim,
#                                       output_dim, 
#                                       label_dim, 
#                                       mlp_dim,
#                                       mlp_dim_2,
#                                       training_samples,
#                                       training_lengths,
#                                       training_targets, 
#                                       training_char_samples,
#                                       training_pos,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       testing_pos,
#                                       dropout_p,
#                                       loss_f,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       highway_network,
#                                       pairwise_encoder_decoder_training,
#                                       pos_enable
#                                       )
#                 else:
#                     if boundary == True:
#                         self.model = boundarypp.CRFSeparatePotentialBiLSTMW2VCNN_BoundaryPP(
#                                       word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       n_pos,
#                                       pos_embedding_dim,
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim, 
#                                       output_dim, 
#                                       label_dim, 
#                                       mlp_dim,
#                                       mlp_dim_2,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       testing_pos,
#                                       dropout_p,
#                                       loss_f,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       highway_network,
#                                       pairwise_encoder_decoder_training,
#                                       pos_enable,
#                                       lstm_pp_hidden_dim,
#                                       pp_output_dim, 
#                                       pp_character_cnn_enable, 
#                                       pp_w2v_enable
#                                       )
#                         self.model = separatecrfpp.CRFSeparatePotentialBiLSTMW2VCNN(
#                                       word2vec_matrix,
#                                       word_embedding_dim,
#                                       n_characters, 
#                                       character_embedding_dim, 
#                                       n_pos,
#                                       pos_embedding_dim,
#                                       max_token_length,
#                                       n_filter,
#                                       n_width,
#                                       cnn_output_dim,
#                                       lstm_hidden_dim_2,
#                                       lstm_hidden_dim, 
#                                       mlp_dim,
#                                       output_dim, 
#                                       label_dim, 
#                                       mlp_dim,
#                                       training_samples,
#                                       training_lengths,
#                                       training_targets, 
#                                       training_char_samples,
#                                       training_pos,
#                                       testing_samples,
#                                       testing_lengths,
#                                       testing_targets,
#                                       testing_chars,
#                                       testing_pos,
#                                       dropout_p,
#                                       loss_f,
#                                       l2_coef,
#                                       w2v_included,
#                                       config_bilstm_2_layer,
#                                       w2v_training,
#                                       pp_mlp_dim,
#                                       pp_decoder_hiddem_dim,
#                                       highway_network,
#                                       pairwise_encoder_decoder_training,
#                                       pos_enable
#                                       )
#             else:
#                 self.model = crfpp.CRFPPBiLSTMW2VCNN(
#                                   word2vec_matrix,
#                                   word_embedding_dim,
#                                   n_characters, 
#                                   character_embedding_dim, 
#                                   max_token_length,
#                                   n_filter,
#                                   n_width,
#                                   cnn_output_dim,
#                                   lstm_hidden_dim_2,
#                                   lstm_hidden_dim, 
#                                   mlp_dim,
#                                   output_dim, 
#                                   label_dim, 
#                                   mlp_dim,
#                                   training_samples,
#                                   training_lengths,
#                                   training_targets, 
#                                   training_char_samples,
#                                   testing_samples,
#                                   testing_lengths,
#                                   testing_targets,
#                                   testing_chars,
#                                   dropout_p,
#                                   loss_f,
#                                   l2_coef,
#                                   w2v_included,
#                                   config_bilstm_2_layer,
#                                   w2v_training,
#                                   pp_mlp_dim
#                                   )
#         else:
#             self.model = stationary_matrix.CRF_BiLSTMW2VCNN_StaticMatrix(
#                          orthogonal_weight_init,
#                          word2vec_matrix, 
#                          word_embedding_dim, 
#                          n_characters, 
#                          character_embedding_dim, 
#                          n_pos, 
#                          pos_embedding_dim, 
#                          max_token_length, 
#                          n_filter, 
#                          n_width, 
#                          cnn_output_dim, 
#                          lstm_hidden_dim, 
#                          output_dim, 
#                          mlp_dim, 
#                          testing_samples, 
#                          testing_lengths, 
#                          testing_targets, 
#                          testing_chars, 
#                          testing_pos,
#                          dropout_p, 
#                          loss_f, 
#                          l2_coef, 
#                          w2v_included, 
#                          w2v_training, 
#                          highway_network, 
#                          pos_enable,
#                          with_forward_backward)

#             self.model = charcnn.CRFDoubleBiLSTMW2VCNN(
#                               word2vec_matrix,
#                               word_embedding_dim,
#                               n_characters, 
#                               character_embedding_dim, 
#                               max_token_length,
#                               n_filter,
#                               n_width,
#                               cnn_output_dim,
#                               lstm_hidden_dim_2,
#                               lstm_hidden_dim, 
#                               mlp_hiddn_dim,
#                               output_dim, 
#                               label_dim, 
#                               mlp_dim,
#                               mlp_dim_2,
#                               training_samples,
#                               training_lengths,
#                               training_targets, 
#                               training_char_samples,
#                               testing_samples,
#                               testing_lengths,
#                               testing_targets,
#                               testing_chars,
#                               dropout_p,
#                               loss_f,
#                               l2_coef,
#                               w2v_included,
#                               config_bilstm_2_layer,
#                               w2v_training)

    def getModel(self):
        return self.model
    